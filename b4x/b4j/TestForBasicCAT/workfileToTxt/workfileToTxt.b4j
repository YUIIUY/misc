AppType=JavaFX
Build1=Default,b4j.example
File1=main.bjl
FileGroup1=Default Group
Group=Default Group
Library1=jcore
Library2=jfx
Library3=json
NumberOfFiles=1
NumberOfLibraries=3
NumberOfModules=0
Version=6.51
@EndOfDesignText@
#Region Project Attributes 
	#MainFormWidth: 600
	#MainFormHeight: 600 
#End Region

Sub Process_Globals
	Private fx As JFX
	Private MainForm As Form
	Private path,filename As String
End Sub

Sub AppStart (Form1 As Form, Args() As String)
	MainForm = Form1
	MainForm.RootPane.LoadLayout("main") 'Load the layout file.
	MainForm.Show
End Sub

'Return true to allow the default exceptions handler to handle the uncaught exception.
Sub Application_Error (Error As Exception, StackTrace As String) As Boolean
	Return True
End Sub

Sub Button1_MouseClicked (EventData As MouseEvent)
	Dim fc As FileChooser
	fc.Initialize
	path=fc.ShowOpen(MainForm)
	filename=File.GetName(path)
	Log(filename)
	generateFile
End Sub


Sub generateFileIndividual
	
	Dim source,target As String
	source="en"
	target="zh"
	
	Dim result As String
	Dim workfile As Map
	Dim json As JSONParser
	json.Initialize(File.ReadString(path,""))
	workfile=json.NextObject
	Dim sourceFiles As List
	sourceFiles=workfile.Get("files")
	For Each sourceFileMap As Map In sourceFiles
		Dim innerfilename As String
		innerfilename=sourceFileMap.GetKeyAt(0)
		Dim segmentsList As List
		segmentsList=sourceFileMap.Get(innerfilename)
		For Each bitext As List In segmentsList
			Dim source,target,fullsource As String
			source=bitext.Get(0)
			target=bitext.Get(1)
			fullsource=bitext.Get(2)
			Log(source)
			Log(target)
			Log(fullsource)

			result=result&fullsource
		Next
		File.WriteString(File.DirApp,innerfilename,result)
	Next
	
End Sub

Sub generateFile
	Dim source,target As String
	source="en"
	target="zh"
	
	Dim result As String
	Dim workfile As Map
	Dim json As JSONParser
	json.Initialize(File.ReadString(path,""))
	workfile=json.NextObject
	Dim sourceFiles As List
	sourceFiles=workfile.Get("files")
	For Each sourceFileMap As Map In sourceFiles
		Dim innerfilename As String
		innerfilename=sourceFileMap.GetKeyAt(0)
		Dim segmentsList As List
		segmentsList=sourceFileMap.Get(innerfilename)
		For Each bitext As List In segmentsList
			Dim source,target,fullsource,translation As String
			source=bitext.Get(0)
			target=bitext.Get(1)
			fullsource=bitext.Get(2)
			Log(source)
			Log(target)
			Log(fullsource)
			If target="" Then
				translation=fullsource
			Else
				translation=fullsource.Replace(source,target)
				If source="en" Then
					translation=translation.Replace(" ","")
				End If
			End If
			result=result&translation
		Next
	Next
	File.WriteString(File.DirApp,"out.txt",result)
End Sub


Sub Button2_MouseClicked (EventData As MouseEvent)
	generateFileIndividual
End Sub